{"version":3,"file":"static/js/961.c6bc31ab.chunk.js","mappings":"0OAoEA,UA9DqB,WAAO,IAAD,MACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAiBnD,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,8GAE2BC,EAAAA,EAAAA,IAAgBZ,GAF3C,OAEUa,EAFV,OAGIT,EAASS,EAASC,MAHtB,gDAKIC,QAAQC,MAAR,MALJ,0DAJc,sBACThB,GADS,mCAYdiB,EACD,GAAE,CAACjB,KAGF,iCACE,SAAC,KAAD,CAAMkB,GAAIX,EAAYY,QAAtB,2BACA,UAAC,KAAD,YACE,gBACEC,IACEjB,EAAMkB,YAAN,0CACuClB,EAAMkB,aACzC,2HAENC,IAAKnB,EAAMoB,MACXC,MAAO,OAET,UAAC,KAAD,YACE,wBAAKrB,EAAMoB,SACX,wBAAKpB,EAAMsB,WACX,uBAAItB,EAAMuB,YACV,gDAAwBvB,EAAMwB,eAC9B,0BACE,+CAAaxB,EAAMyB,cAAnB,aAAa,EAAcC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,YAE1D,2CAAmB5B,EAAM6B,uBAG7B,UAAC,KAAD,YACE,oDACA,yBACE,SAAC,KAAD,CAAMd,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAIJ,SAAC,EAAAe,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,oKChEKC,EAAM,mCAECC,EAAoB,WAC/B,IACMC,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IANE,kDAMaH,EACvB,EAEYI,EAAkB,SAAAC,GAC7B,IACML,EAAU,CACdC,OAAQ,CAENC,QAASJ,EACTO,MAAOA,IAGX,OAAOF,EAAAA,EAAAA,IARE,4CAQaH,EACvB,EAEYzB,EAAkB,SAAA+B,GAC7B,IAAMC,EAAG,6CAAyCD,GAC5CN,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IAAUI,EAAKP,EACvB,EAEYQ,EAAkB,SAAAF,GAC7B,IAAMC,EAAG,6CAAyCD,EAAzC,YACHN,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IAAUI,EAAKP,EACvB,EAEYS,EAAkB,SAAAH,GAC7B,IAAMC,EAAG,6CAAyCD,EAAzC,YACHN,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IAAUI,EAAKP,EACvB,C","sources":["pages/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["import { Suspense, useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/Api';\nimport { MovieContainer, Info, AddInfo } from '../../services/Movies.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const response = await getMovieDetails(movieId);\n        setMovie(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkRef.current}>Back to back</Link>\n      <MovieContainer>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n              : 'https://kartinki.pibig.info/uploads/posts/2023-04/1681549820_kartinki-pibig-info-p-zaglushka-kartinka-arti-krasivo-2.jpg'\n          }\n          alt={movie.title}\n          width={400}\n        />\n        <Info>\n          <h1>{movie.title}</h1>\n          <h2>{movie.tagline}</h2>\n          <p>{movie.overview}</p>\n          <h3>User average vote: {movie.vote_count}</h3>\n          <div>\n            <h3>Genres: {movie.genres?.map(({ name }) => name).join(', ')}</h3>\n          </div>\n          <h3>Data release: {movie.release_date}</h3>\n        </Info>\n      </MovieContainer>\n      <AddInfo>\n        <h4>Additional information</h4>\n        <li>\n          <Link to=\"Cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"Reviews\">Reviews</Link>\n        </li>\n      </AddInfo>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '3ed884ed7da314ae568ec7776884f04a';\n\nexport const getTrendingMovies = () => {\n  const url = `https://api.themoviedb.org/3/trending/movie/day`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getSearchMovies = query => {\n  const url = `https://api.themoviedb.org/3/search/movie`;\n  const options = {\n    params: {\n      // page: page,\n      api_key: KEY,\n      query: query,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getMovieDetails = movie_id => {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getMovieCredits = movie_id => {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}/credits`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getMovieReviews = movie_id => {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}/reviews`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkRef","useRef","state","from","useEffect","getMovieDetails","response","data","console","error","fetchData","to","current","src","poster_path","alt","title","width","tagline","overview","vote_count","genres","map","name","join","release_date","Suspense","fallback","KEY","getTrendingMovies","options","params","api_key","axios","getSearchMovies","query","movie_id","url","getMovieCredits","getMovieReviews"],"sourceRoot":""}