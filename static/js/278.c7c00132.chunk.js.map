{"version":3,"file":"static/js/278.c7c00132.chunk.js","mappings":"0OAsFA,UA1Ee,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GA4B/C,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,8GAE2BC,EAAAA,EAAAA,IAAgBH,GAF3C,OAEUI,EAFV,OAGIZ,EAAUY,EAASC,KAAKC,SAH5B,gDAKIC,QAAQC,MAAR,MALJ,0DAJc,sBACTR,GADS,mCAYdS,EACD,GAAE,CAACT,KAGF,iCACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAYU,SAzBG,SAAAC,GACnBA,EAAEC,iBACqB,KAAvBnB,EAAYoB,OACRC,MAAM,iCAAmCf,EAAgB,CAAC,GAC1DA,EAAgB,CAAEgB,MAAOtB,KAAkBC,EAAe,GAC/D,EAoBK,WACE,SAAC,KAAD,CAAQsB,KAAK,SAAb,UACE,SAAC,KAAD,wBAGF,SAAC,KAAD,CACEA,KAAK,OACLC,MAAOxB,EACPyB,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAxCgB,SAAAV,GACxBjB,EAAeiB,EAAEW,OAAOL,MACzB,UA2CG,SAAC,KAAD,UACG1B,GACCA,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACT,SAAC,KAAD,CAAeC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMlC,GAA3C,UACE,yBACE,gBACEmC,IACEJ,EAAW,0CAC4BA,GACnC,2HAENK,IAAKN,EACLO,MAAO,SATFR,EADF,QAkBpB,C,oKClFKS,EAAM,mCAECC,EAAoB,WAC/B,IACMC,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IANE,kDAMaH,EACvB,EAEYhC,EAAkB,SAAAY,GAC7B,IACMoB,EAAU,CACdC,OAAQ,CAENC,QAASJ,EACTlB,MAAOA,IAGX,OAAOuB,EAAAA,EAAAA,IARE,4CAQaH,EACvB,EAEYI,EAAkB,SAAAC,GAC7B,IAAMC,EAAG,6CAAyCD,GAC5CL,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IAAUG,EAAKN,EACvB,EAEYO,EAAkB,SAAAF,GAC7B,IAAMC,EAAG,6CAAyCD,EAAzC,YACHL,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IAAUG,EAAKN,EACvB,EAEYQ,EAAkB,SAAAH,GAC7B,IAAMC,EAAG,6CAAyCD,EAAzC,YACHL,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IAAUG,EAAKN,EACvB,C","sources":["pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../../services/Api';\nimport {\n  SearchBar,\n  SearchForm,\n  Button,\n  Label,\n  Input,\n  Gallery,\n} from '../../services/Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const updateQueryString = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchQuery.trim() === ''\n      ? alert('Enter another word to search') || setSearchParams({})\n      : setSearchParams({ query: searchQuery }) || setSearchQuery('');\n  };\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const response = await getSearchMovies(movieName);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, [movieName]);\n\n  return (\n    <>\n      <SearchBar>\n        <SearchForm onSubmit={handleSubmit}>\n          <Button type=\"submit\">\n            <Label>Search</Label>\n          </Button>\n\n          <Input\n            type=\"text\"\n            value={searchQuery}\n            autocomplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={updateQueryString}\n          />\n        </SearchForm>\n      </SearchBar>\n\n      <Gallery>\n        {movies &&\n          movies.map(({ id, title, poster_path }) => (\n            <Link key={id} to={`${id}`} state={{ from: location }}>\n              <li>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : 'https://kartinki.pibig.info/uploads/posts/2023-04/1681549820_kartinki-pibig-info-p-zaglushka-kartinka-arti-krasivo-2.jpg'\n                  }\n                  alt={title}\n                  width={270}\n                />\n              </li>\n            </Link>\n          ))}\n      </Gallery>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '3ed884ed7da314ae568ec7776884f04a';\n\nexport const getTrendingMovies = () => {\n  const url = `https://api.themoviedb.org/3/trending/movie/day`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getSearchMovies = query => {\n  const url = `https://api.themoviedb.org/3/search/movie`;\n  const options = {\n    params: {\n      // page: page,\n      api_key: KEY,\n      query: query,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getMovieDetails = movie_id => {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getMovieCredits = movie_id => {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}/credits`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getMovieReviews = movie_id => {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}/reviews`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n"],"names":["useState","movies","setMovies","searchQuery","setSearchQuery","location","useLocation","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","getSearchMovies","response","data","results","console","error","fetchData","onSubmit","e","preventDefault","trim","alert","query","type","value","autocomplete","autoFocus","placeholder","onChange","target","map","id","title","poster_path","to","state","from","src","alt","width","KEY","getTrendingMovies","options","params","api_key","axios","getMovieDetails","movie_id","url","getMovieCredits","getMovieReviews"],"sourceRoot":""}