{"version":3,"file":"static/js/186.b1c52b08.chunk.js","mappings":"kOA0CA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,8GAE2BC,EAAAA,EAAAA,IAAgBN,GAF3C,OAEUO,EAFV,OAGIH,EAAWG,EAASC,KAAKC,SAH7B,gDAKIC,QAAQC,MAAR,MALJ,0DAJc,sBACTR,GADS,mCAYdS,EACD,GAAE,CAACT,EAASH,KAGX,+BACE,SAAC,KAAD,UACGG,EAAQU,OAAS,GAChB,0DAEAV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADC,OAUrB,C,oKCtCKC,EAAM,mCAECC,EAAoB,WAC/B,IACMC,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IANE,kDAMaH,EACvB,EAEYI,EAAkB,SAAAC,GAC7B,IACML,EAAU,CACdC,OAAQ,CAENC,QAASJ,EACTO,MAAOA,IAGX,OAAOF,EAAAA,EAAAA,IARE,4CAQaH,EACvB,EAEYM,EAAkB,SAAAC,GAC7B,IAAMC,EAAG,6CAAyCD,GAC5CP,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IAAUK,EAAKR,EACvB,EAEYS,EAAkB,SAAAF,GAC7B,IAAMC,EAAG,6CAAyCD,EAAzC,YACHP,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IAAUK,EAAKR,EACvB,EAEYd,EAAkB,SAAAqB,GAC7B,IAAMC,EAAG,6CAAyCD,EAAzC,YACHP,EAAU,CACdC,OAAQ,CACNC,QAASJ,IAGb,OAAOK,EAAAA,EAAAA,IAAUK,EAAKR,EACvB,C","sources":["components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../../services/Api';\nimport { Info } from 'services/Movies.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!reviews) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, [reviews, movieId]);\n\n  return (\n    <>\n      <Info>\n        {reviews.length < 1 ? (\n          <h3>We don't have any reviews yet</h3>\n        ) : (\n          reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n        )}\n      </Info>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '3ed884ed7da314ae568ec7776884f04a';\n\nexport const getTrendingMovies = () => {\n  const url = `https://api.themoviedb.org/3/trending/movie/day`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getSearchMovies = query => {\n  const url = `https://api.themoviedb.org/3/search/movie`;\n  const options = {\n    params: {\n      // page: page,\n      api_key: KEY,\n      query: query,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getMovieDetails = movie_id => {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getMovieCredits = movie_id => {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}/credits`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n\nexport const getMovieReviews = movie_id => {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}/reviews`;\n  const options = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  return axios.get(url, options);\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","response","data","results","console","error","fetchData","length","map","author","content","id","KEY","getTrendingMovies","options","params","api_key","axios","getSearchMovies","query","getMovieDetails","movie_id","url","getMovieCredits"],"sourceRoot":""}